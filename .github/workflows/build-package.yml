name: Build Package
on: [push, pull_request]

jobs:
  build:
    runs-on: 'ubuntu-latest'
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.2.1
        env:
          CIBW_BEFORE_BUILD_LINUX: yum install -y wget && ./build-drafter.sh
          CIBW_BUILD: cp310-manylinux_x86_64
          CIBW_BUILD_VERBOSITY: 3
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_BUILD_FRONTEND: pip
        with:
          package-dir: .
          output-dir: dist
          config-file: "pyproject.toml"

      - name: Set up Python 3.10
        uses: actions/setup-python@v6
        with:
          python-version: "3.10"
      - run: pip install --upgrade pip

      # Poetry automatically assumes the most specific tag
      # but we don't actually need specific builds
      # for each python version (3.10, 3.11, etc).
      # We build one wheel then re-tag it as py3-none.
      - name: Fix wheel tags
        run: |
          pip install wheel>=0.40.0
          wheel tags --python-tag py3 --abi-tag none dist/*linux*.whl --remove

      # build sdist
      - name: Install dependencies
        run: |
          pip install poetry
          make install
      - name: Build sdist
        run: poetry build --format sdist

      - run: ls dist

      - uses: actions/upload-artifact@v4
        with:
          path: ./dist/*

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: none
      id-token: write # required for trusted publishing
    environment: publish
    steps:
      - uses: actions/download-artifact@v5
        with:
          path: artifact

      - run: ls artifact

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: artifact/
          print-hash: true
